<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IoT学习小记 on ta0lve</title>
    <link>https://ta0lve.github.io/series/iot%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/</link>
    <description>Recent content in IoT学习小记 on ta0lve</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 23 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ta0lve.github.io/series/iot%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IoT漏洞挖掘思路</title>
      <link>https://ta0lve.github.io/posts/iot/0x03/</link>
      <pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ta0lve.github.io/posts/iot/0x03/</guid>
      <description>&lt;div
  
    class=&#34;flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900&#34;
  &gt;

  &lt;span
    
      class=&#34;text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center&#34;
    &gt;

    

  &lt;span class=&#34;relative block icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z&#34;/&gt;&lt;/svg&gt;

  &lt;/span&gt;


  &lt;/span&gt;

  &lt;span
    
      class=&#34;dark:text-neutral-300&#34;
    &gt;&lt;strong&gt;如果本博客部分文章图片加载失败，&lt;/strong&gt;&lt;a href=&#34;https://ta0lve.github.io/posts/sth/sm.ms/&#34;  &gt;
    &lt;strong&gt;可以点击此处查看解决办法&lt;/strong&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/div&gt;

&lt;div id=&#34;0x01-获取固件&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;0x01 获取固件 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#0x01-%e8%8e%b7%e5%8f%96%e5%9b%ba%e4%bb%b6&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;一般从&lt;strong&gt;固件厂商官网&lt;/strong&gt;获取&lt;/p&gt;
&lt;p&gt;也可以通过抓设备升级的包、购买硬件设备来获取固件&lt;/p&gt;
&lt;div id=&#34;0x02-解密固件&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;0x02 解密固件 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#0x02-%e8%a7%a3%e5%af%86%e5%9b%ba%e4%bb%b6&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;参考链接：&lt;a href=&#34;https://wokough.gitbook.io/iot-firmware-aio/wiki/gu-jian-jie-mi#yi-gu-jian-jia-mi-pan-duan&#34;   target=&#34;_blank&#34;&gt;
    固件解密 - IOT 固件安全 All in One (gitbook.io)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在解密固件之前可以先上网查询有没有相关文章&lt;/li&gt;
&lt;li&gt;也可以看一下同一品牌的其他固件是如何解密的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解密固件是分析加密固件所需迈过的第一道坎&lt;/p&gt;
&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/bT35JcBd2Sn4gvR.png&#34; alt=&#34;image-20240225113753127&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;部分固件的解密思路可以参考以下思路：&lt;/p&gt;
&lt;p&gt;看看是不是仍有少部分固件（或过渡版本的固件）并未加密，当这些固件升级的过程中大概也会使用到解密的程序，因此可以&lt;strong&gt;通过解开这些未加密固件，找到解密程序，并逆向分析出相关算法&lt;/strong&gt;，这也是固件解密常用的一种手段。并且，一般一个厂商的固件加密算法都是相同的，这样所有的固件我们都能够解开了&lt;/p&gt;
&lt;p&gt;解密完固件为后续的静态分析做准备&lt;/p&gt;
&lt;div id=&#34;0x03-仿真模拟&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;0x03 仿真模拟 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#0x03-%e4%bb%bf%e7%9c%9f%e6%a8%a1%e6%8b%9f&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;动态分析方法&lt;/strong&gt;需要固件进行仿真模拟，或者在物理设备上进行片上调试，来获得反馈信息&lt;/p&gt;
&lt;p&gt;真实固件的调试可以参考：&lt;a href=&#34;https://wokough.gitbook.io/iot-firmware-aio/wiki/gu-jian-tiao-shi&#34;   target=&#34;_blank&#34;&gt;
    固件调试 - IOT 固件安全 All in One (gitbook.io)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而仿真模拟可以参考以下的思路来进行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先使用FirmAE、Firmware Analysis Toolkit等开箱即用的工具进行仿真
&lt;ul&gt;
&lt;li&gt;固件跑起来并不意味着成功仿真&lt;/li&gt;
&lt;li&gt;可能会有部分功能的缺失&lt;/li&gt;
&lt;li&gt;需要测试网络是否连通，web是否正常访问，若有其他开放端口是否能正常访问等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;也可以使用FirmAFL、FirmFuzz、Fuzzware来进行仿真模拟+fuzz&lt;/li&gt;
&lt;li&gt;工具仿真效果不理想时可以使用qemu来进行仿真
&lt;ul&gt;
&lt;li&gt;Unicorn和Qiling暂时了解较少，也可以用来仿真模拟&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;firmae&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;FirmAE 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#firmae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;成功概率较高（优于Firmadyne）
&lt;ul&gt;
&lt;li&gt;FirmAE significantly increases the emulation success rate (From &lt;a href=&#34;https://github.com/firmadyne/firmadyne&#34;   target=&#34;_blank&#34;&gt;
    Firmadyne&lt;/a&gt;&amp;rsquo;s 16.28% to 79.36%)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.52pojie.cn/thread-1572565-1-1.html&#34;   target=&#34;_blank&#34;&gt;
    FirmAE及DlinkDIR320、600、645漏洞复现 - 『软件调试区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pr0v3rbs/FirmAE&#34;   target=&#34;_blank&#34;&gt;
    pr0v3rbs/FirmAE: Towards Large-Scale Emulation of IoT Firmware for Dynamic Analysis (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ftp.dlink.ru/pub/Router/DIR-645/Firmware/&#34;   target=&#34;_blank&#34;&gt;
    Index of /pub/Router/DIR-645/Firmware (dlink.ru)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;安装：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone --recursive https://github.com/pr0v3rbs/FirmAE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./download.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./install.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;使用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;执行脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./init.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;准备固件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 举例：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/pr0v3rbs/FirmAE/releases/download/v1.0/DIR-868L_fw_revB_2-05b02_eu_multi_20161117.zip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;检查仿真&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ./run.sh -c &amp;lt;brand&amp;gt; &amp;lt;firmware&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;分析目标固件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分析模式使用 FirmAE 分析器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ./run.sh -a &amp;lt;brand&amp;gt; &amp;lt;firmware&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;运行模式有助于测试 Web 服务或执行自定义分析器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ./run.sh -r &amp;lt;brand&amp;gt; &amp;lt;firmware&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/UhFeDBbwIEcVaHs.png&#34; alt=&#34;image-20240225104426390&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;div id=&#34;firmware-analysis-toolkit&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;Firmware Analysis Toolkit 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#firmware-analysis-toolkit&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/attify/firmware-analysis-toolkit&#34;   target=&#34;_blank&#34;&gt;
    attify/firmware-analysis-toolkit: Toolkit to emulate firmware and analyse it for security vulnerabilities (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/attify/firmware-analysis-toolkit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; firmware-analysis-toolkit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./setup.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# fat.config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;DEFAULT&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;sudo_password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;attify123
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;firmadyne_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/attify/firmadyne
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;使用：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./fat.py &amp;lt;firmware file&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ./fat.py DIR-601_REVB_FIRMWARE_2.01.BIN 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                               __           _   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                              / _&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;         &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_    __ _  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_ 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  _&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  / _&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; __&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_ 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;    &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_,_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;                    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                Welcome to the Firmware Analysis Toolkit - v0.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Offensive IoT Exploitation Training http://bit.do/offensiveiotexploitation
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  By Attify - https://attify.com  &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; @attifyme
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Firmware: DIR-601_REVB_FIRMWARE_2.01.BIN
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Extracting the firmware...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Image ID: &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Identifying architecture...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Architecture: mipseb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Building QEMU disk image...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Setting up the network connection, please standby...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Network interfaces: &lt;span class=&#34;o&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;br0&amp;#39;&lt;/span&gt;, &lt;span class=&#34;s1&#34;&gt;&amp;#39;192.168.0.1&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; All set! Press ENTER to run the firmware...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; When running, press Ctrl + A X to terminate qemu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/5vn4FhxHLXNaVkY.png&#34; alt=&#34;image-20240223021726180&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;div id=&#34;qemu&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;QEMU 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#qemu&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://wokough.gitbook.io/iot-firmware-aio/wiki/fang-zhen-fen-xi#id-1.1-qemu&#34;   target=&#34;_blank&#34;&gt;
    https://wokough.gitbook.io/iot-firmware-aio/wiki/fang-zhen-fen-xi#id-1.1-qemu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;具体问题具体分析&lt;/p&gt;
&lt;p&gt;具体固件使用对应的命令进行仿真&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先上网搜索相关信息，看看有没有文章已经仿真过了&lt;/li&gt;
&lt;li&gt;参考之前仿真设备的案例来试着仿真&lt;/li&gt;
&lt;li&gt;如果都没有就需要我们参考着官方文档以及对固件的静态分析来自己调整命令
&lt;ul&gt;
&lt;li&gt;如果遇到一些参数实在没有办法满足时可以先跑起来&lt;/li&gt;
&lt;li&gt;在动态调试的过程看是哪个汇编执行报错
&lt;ul&gt;
&lt;li&gt;再在IDA中进行合适的patch来使得固件可以成功仿真&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如当我们需要向&lt;code&gt;main&lt;/code&gt;函数传递参数&lt;code&gt;argv&lt;/code&gt;和设置环境变量时，可以先看看官方usage：&lt;/p&gt;
&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/apCn8t9zLSGwFbK.png&#34; alt=&#34;image-20240224180845930&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;发现我们可以用&lt;code&gt;-0&lt;/code&gt;选项传递第一个参数，用&lt;code&gt;-E&lt;/code&gt;选项设置环境变量，用&lt;code&gt;-L&lt;/code&gt;选项做到类似于更改根目录的效果，用&lt;code&gt;-strace&lt;/code&gt;选项追踪程序执行时进程系统调用和所接收的信号，方便调试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;部分固件的仿真需要我们使用qemu来配置网络&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可以先拍一个快照再来开始仿真，便于会快照重新配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参考&lt;a href=&#34;https://github.com/Vu1nT0tal/IoT-vulhub/tree/master/HUAWEI/CVE-2017-17215&#34;   target=&#34;_blank&#34;&gt;
    IoT-vulhub&lt;/a&gt;项目网络配置的方法，可以得到一个配置网络的shell文件模版&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 启动 ssh 服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/ssh start
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 配置网卡&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tunctl -t tap0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ifconfig tap0 192.168.2.1/24
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 启动 http 服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nohup python3 -m http.server &lt;span class=&#34;m&#34;&gt;8000&lt;/span&gt; 1&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;/dev/null &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 进入 qemu 镜像目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /root/images
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/bin/expect&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;set timeout 10000
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;# 依照固件及qemu文档更改此处命令
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;spawn qemu-system-mips -M malta -kernel vmlinux-3.2.0-4-4kc-malta -hda debian_wheezy_mips_standard.qcow2 -append &amp;#34;root=/dev/sda1 console=tty0&amp;#34; -netdev tap,id=tapnet,ifname=tap0,script=no -device rtl8139,netdev=tapnet -nographic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;debian-mips login:&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;root\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;Password:&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;root\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;ifconfig eth0 192.168.2.2/24\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;#expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;#send &amp;#34;echo 0 &amp;gt; /proc/sys/kernel/randomize_va_space\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;scp root@192.168.2.1:/root/squashfs-root.tar.gz /root/squashfs-root.tar.gz\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    &amp;#34;(yes/no)? &amp;#34; { send &amp;#34;yes\r&amp;#34;; exp_continue }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    &amp;#34;password: &amp;#34; { send &amp;#34;root\r&amp;#34; }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;tar xzf squashfs-root.tar.gz &amp;amp;&amp;amp; rm squashfs-root.tar.gz\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;mount -o bind /dev ./squashfs-root/dev &amp;amp;&amp;amp; mount -t proc /proc ./squashfs-root/proc\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;scp -r root@192.168.2.1:/root/tools /root/squashfs-root/tools\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    &amp;#34;(yes/no)? &amp;#34; { send &amp;#34;yes\r&amp;#34;; exp_continue }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    &amp;#34;password: &amp;#34; { send &amp;#34;root\r&amp;#34; }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;echo &amp;#39;sleep 30&amp;#39; &amp;gt; net.sh\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;echo &amp;#39;ifconfig eth0 192.168.2.2/24&amp;#39; &amp;gt;&amp;gt; net.sh\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;echo &amp;#39;ifconfig br0 192.168.2.3/24&amp;#39; &amp;gt;&amp;gt; net.sh\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;chmod +x net.sh &amp;amp;&amp;amp; /bin/sh net.sh &amp;amp;\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;root@debian-mips:~# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;chroot squashfs-root/ sh\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;./bin/upnp\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect &amp;#34;# &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;send &amp;#34;./bin/mic\r&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;expect eof
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;0x04-fuzz&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;0x04 fuzz 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#0x04-fuzz&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;动态分析&lt;/strong&gt;查找漏洞时主要通过各类fuzz工具来得到漏洞的触发点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要使用FirmAFL、FirmFuzz、Fuzzware工具来进行fuzz&lt;/li&gt;
&lt;li&gt;也可以使用afl与afl++&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;fuzzware&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;Fuzzware 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#fuzzware&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fuzzware-fuzzer/fuzzware&#34;   target=&#34;_blank&#34;&gt;
    fuzzware-fuzzer/fuzzware: Fuzzware&amp;rsquo;s main repository. Start here to install. (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/fuzzware-fuzzer/fuzzware.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ./build_docker.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ./run_docker.sh examples fuzzware pipeline --skip-afl-cpufreq pw-recovery/ARCH_PRO
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ./run_docker.sh &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; fuzzware pipeline --skip-afl-cpufreq .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;成功将固件跑起来：&lt;/p&gt;
&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/krvpGM6NwIgKcLs.png&#34; alt=&#34;image-20240202005856817&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;由图可以看到刚开始运行时发现新的MMIO寄存器模型，由于MMIO Access Model中并不存在，因此会将其定义为新的模型，然后继续向下运行&lt;/p&gt;
&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/PunMRS4qrwWbN93.png&#34; alt=&#34;image-20240202010428350&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;建模完毕后，开始进行正常的fuzzing阶段：&lt;/p&gt;
&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/MnVkI6tiX5OAKlC.png&#34; alt=&#34;image-20240202011901838&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;每一轮fuzzing结束后，根据反馈调整输入，开始下一阶段fuzzing：&lt;/p&gt;
&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/7p9AVbuitzjJGg5.png&#34; alt=&#34;image-20240202010524792&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;div id=&#34;afl&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;afl++ 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#afl&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;div id=&#34;有源码&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;有源码 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%9c%89%e6%ba%90%e7%a0%81&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;使用 afl-gcc 进行插桩编译：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;afl-gcc test.c -o test_file
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcc test.c -o test_gcc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;afl-gcc 插桩编译后，fuzz 的速度会快一些&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来就可以进行 fuzz 了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;afl-fuzz -i ./fuzz_in -o ./fuzz_out ./test_file -f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;fuzz_in 为语料库，可以直接使用 AFL 自带的 testcases&lt;/li&gt;
&lt;li&gt;fuzz_out 就是输出的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;无源码&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;无源码 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%97%a0%e6%ba%90%e7%a0%81&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install libtool-bin libgtk2.0-dev -y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /home/iot/test/tools/AFLplusplus/qemu_mode
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./build_qemu_support.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;afl-fuzz -Q -m none -i in -o out ./pwn_file @@
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/home/iot/test/tools/AFLplusplus/afl-fuzz -i fuzz_in -o ./fuzz_out -Q ./pwn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/FLNCaEdOGBynpku.png&#34; alt=&#34;image-20240202034131386&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;div id=&#34;0x05-静态分析&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;0x05 静态分析 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#0x05-%e9%9d%99%e6%80%81%e5%88%86%e6%9e%90&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/sectool/339207.html&#34;   target=&#34;_blank&#34;&gt;
    浅析IOT二进制静态辅助方法 - FreeBuf网络安全行业门户&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IDA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大多数是32位的，少数是64位的&lt;/li&gt;
&lt;li&gt;推荐安装keypatch插件，在patch固件的时候会方便一些&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ghira&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以安装许多有用的插件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SaTC&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动化挖掘工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他二进制静态辅助工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BinAbsInspector&lt;/li&gt;
&lt;li&gt;Rhabdomancer&lt;/li&gt;
&lt;li&gt;Haruspex + semgrep&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;satc&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;SaTC 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#satc&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/NSSL-SJTU/SaTC&#34;   target=&#34;_blank&#34;&gt;
    NSSL-SJTU/SaTC: A prototype of Shared-keywords aware Taint Checking, a novel static analysis approach that tracks the data flow of the user input between front-end and back-end to precisely detect security vulnerabilities. (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建议通过使用Dockerfile来构建系统环境:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 进入SaTC代码目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; SaTC 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 构建Docker镜像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker build . -t satc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 进入Dokcer环境, 自行添加目录映射&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -it satc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果因为网络等原因无法构建，可使用我们提供等docker image&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 从docker hun拉去image&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker pull smile0304/satc:V1.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 进入Dokcer环境, 自行添加目录映射&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -it smile0304/satc:V1.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;usage: satc.py &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-h&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -d /root/path/_ac18.extracted -o /root/output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--ghidra_script &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;ref2sink_cmdi,ref2sink_bof,share2sink,ref2share,all&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;--save_ghidra_project&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; --taint_check
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-b /var/ac18/bin/httpd &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; -l 3&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SATC tool
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;optional arguments:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -h, --help            查看帮助
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -d /root/path/_ac18.extracted, --directory /root/path/_ac18.extracted
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        指定从固件中提取出的文件系统
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -o /root/output, --output /root/output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        指定结果输出位置
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --ghidra_script &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;ref2sink_cmdi,ref2sink_bof,share2sink,ref2share,all&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;可选&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 指定要使用的 Ghidra 脚本。 如果使用&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;all&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;命令，&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;ref2sink_cmdi&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;、&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;ref2sink_bof&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;和&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;ref2share&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;三个脚本将同时运行
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --ref2share_result /root/path/ref2share_result  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;可选&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 运行&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;share2sink&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; Ghidra脚本时，需要使用该参数指定&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;ref2share&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;脚本的输出结果
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --save_ghidra_project &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;可选&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 是否保存程序运行时产生的ghidra工程路径
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --taint_check         &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;可选&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 指定是否启用污点分析
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -b /var/ac18/bin/httpd, --bin /var/ac18/bin/httpd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;可选&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 用于指定需要分析的程序，如果不指定，SaTC将使用内置算法确认需要分析的程序
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -l 3, --len &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;可选&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 根据分析结果分析可能为边界的前N个程序，默认为3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果的目录结构为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- ghidra_extract_result &lt;span class=&#34;c1&#34;&gt;# ghidra寻找函数调用路径的分析结果, 启用`--ghidra_script`选项会输出该目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- httpd &lt;span class=&#34;c1&#34;&gt;# 每个被分析的bin都会生成一个同名文件夹&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;       &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- httpd &lt;span class=&#34;c1&#34;&gt;# 被分析的bin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;       &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- httpd_ref2sink_bof.result &lt;span class=&#34;c1&#34;&gt;# 定位bof类型的sink函数路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;       &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- httpd_ref2sink_cmdi.result &lt;span class=&#34;c1&#34;&gt;# 定位cmdi类型的sink函数路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- keyword_extract_result  &lt;span class=&#34;c1&#34;&gt;# 关键字提取结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- detail  &lt;span class=&#34;c1&#34;&gt;# 前端关键字提取结果(详细分析结果)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- API_detail.result &lt;span class=&#34;c1&#34;&gt;# 提取的API详细结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- API_remove_detail.result &lt;span class=&#34;c1&#34;&gt;# 被过滤掉的API信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- api_split.result  &lt;span class=&#34;c1&#34;&gt;# 模糊匹配的API结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- Clustering_result_v2.result &lt;span class=&#34;c1&#34;&gt;# 详细分析结果(不关心其他过程关心此文件即可)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- File_detail.result  &lt;span class=&#34;c1&#34;&gt;# 记录了从单独文件中提取的关键字&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- from_bin_add_para.result &lt;span class=&#34;c1&#34;&gt;# 在二进制匹配过程中新增的关键字&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- from_bin_add_para.result_v2 &lt;span class=&#34;c1&#34;&gt;# 同上,V2版本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- Not_Analysise_JS_File.result &lt;span class=&#34;c1&#34;&gt;# 未被分析的JS文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- Prar_detail.result &lt;span class=&#34;c1&#34;&gt;# 提取的Prar详细结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- Prar_remove_detail.result &lt;span class=&#34;c1&#34;&gt;# 被过滤掉的Prar结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- info.txt  &lt;span class=&#34;c1&#34;&gt;# 记录前端关键字提取时间等信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- simple  &lt;span class=&#34;c1&#34;&gt;# 前端关键字提取结果, 比较简单&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;       &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- API_simple.result &lt;span class=&#34;c1&#34;&gt;# 在全部二进制中出现的全部API名称&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;       &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- Prar_simple.result  &lt;span class=&#34;c1&#34;&gt;# 在全部二进制中出现等的全部Prar&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-- result-httpd-ref2sink_cmdi-ctW8.txt &lt;span class=&#34;c1&#34;&gt;# 污点分析结果,启用`--taint-check` 和 `--ghidra_script`选项才会生成该文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在&lt;code&gt;/home/satc/res&lt;/code&gt;下生成的txt文件可以查看结果&lt;/p&gt;
&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/cFOLYQuvWgzjpid.png&#34; alt=&#34;image-20240225155835675&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;div id=&#34;0x06-验证漏洞&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;0x06 验证漏洞 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#0x06-%e9%aa%8c%e8%af%81%e6%bc%8f%e6%b4%9e&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;直接购买真实设备来验证漏洞&lt;/li&gt;
&lt;li&gt;本地仿真模拟来验证 or 复现
&lt;ul&gt;
&lt;li&gt;可以先按照 0x03 部分先对固件进行仿真模拟&lt;/li&gt;
&lt;li&gt;然后在本地对漏洞进行验证或复现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一些路由器固件的漏洞可以在一些网站上查找到还在用此路由器设备的站点
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shodan.io/&#34;   target=&#34;_blank&#34;&gt;
    shodan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zoomeye.org/discover&#34;   target=&#34;_blank&#34;&gt;
    ZoomEye&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;0x07-其他&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;0x07 其他 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#0x07-%e5%85%b6%e4%bb%96&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;挖漏洞之前可以先在各类cve cnvd平台搜索一下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;相关产品的漏洞可以提供参考&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;也可以避免重复挖出/提交已有的漏洞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cve.mitre.org/cve/search_cve_list.html&#34;   target=&#34;_blank&#34;&gt;
    CVE - Search CVE List (mitre.org)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cve.ics-csirt.io/cve&#34;   target=&#34;_blank&#34;&gt;
    Vulnerabilities (CVE) - OpenCVE (ics-csirt.io)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;挖出一个洞之后&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以横向看看同一家厂商的其他产品是不是也存在类似的漏洞&lt;/li&gt;
&lt;li&gt;可以思考这个漏洞点是否有其他更加有危害的利用方式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;还可以思考一下如何修复这个漏洞&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应该如何打补丁&lt;/li&gt;
&lt;li&gt;一些有漏洞的固件在第一次修补之后仍存在漏洞，我们的修复方式是否能避免这样的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以参考一下winmt师傅的挖洞经历&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bbs.kanxue.com/thread-277386.htm#msg_header_h2_6&#34;   target=&#34;_blank&#34;&gt;
    记一次全设备通杀未授权RCE的挖掘经历-看雪-安全社区|&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;后记&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;后记 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%90%8e%e8%ae%b0&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;漏洞挖掘众多尝试的一小部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尝试1&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ wget https://down.tenda.com.cn/uploadfile/AC18/ac18_kf_V15.03.05.19&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;6318_&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;_cn.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ binwalk -Me ac18_kf_V15.03.05.19&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;6318_&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;_cn.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo docker run -it -v ./squashfs-root/:/home/satc/SaTC/SaTC_data smile0304/satc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 进入SaTC容器中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 检查/home/satc/SaTC/SaTC_data文件夹中是否有数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls /home/satc/SaTC/SaTC_data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/SaTC
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 测试/bin/httpd是否存在命令注入漏洞&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python satc.py -d /home/satc/SaTC/SaTC_data -o /home/satc/res --ghidra_script&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ref2sink_cmdi -b httpd --taint_check
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 测试/bin/httpd是否存在缓冲区溢出漏洞&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python satc.py -d /home/satc/SaTC/SaTC_data -o /home/satc/res --ghidra_script&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ref2sink_bof -b httpd --taint_check
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/NIs4Tolehu6FVn5.png&#34; alt=&#34;image-20240225123452035&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;过程中可能会飘红，或者警告，直接忽略，只要在&lt;code&gt;/home/satc/res&lt;/code&gt;下输出txt文件就ok&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尝试2&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-SH&#34; data-lang=&#34;SH&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ wget https://down.tenda.com.cn/uploadfile/AC10/V16.03.48.23.zip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ unzip V16.03.48.23.zip &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; V16.03.48.23
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ binwalk -Me US_AC10V5.0si_V16.03.48.23_cn_TDC01.bin 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/bT35JcBd2Sn4gvR.png&#34; alt=&#34;image-20240225123547359&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尝试3&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$wget&lt;/span&gt; https://ftp.dlink.ru/pub/Router/DWR-921/Firmware/2023.07.20-15.22_DWR_921_POST_4.0.2_release.bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /home/iot/tools/firmware-analysis-toolkit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ./fat.py /home/iot/vul/D-Link/DWR-921/2023.07.20-15.22_DWR_921_POST_4.0.2_release.bin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/2rAUfnyPv3qkLZa.png&#34; alt=&#34;image-20240225121253995&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ binwalk -Me 2023.07.20-15.22_DWR_921_POST_4.0.2_release.bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo docker run -it -v ./squashfs-root/:/home/satc/SaTC/SaTC_data smile0304/satc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 进入SaTC容器中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 检查/home/satc/SaTC/SaTC_data文件夹中是否有数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ls /home/satc/SaTC/SaTC_data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/SaTC
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 测试/bin/httpd是否存在命令注入漏洞&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python satc.py -d /home/satc/SaTC/SaTC_data -o /home/satc/res --ghidra_script&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ref2sink_cmdi -b httpd --taint_check
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 测试/bin/httpd是否存在缓冲区溢出漏洞&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python satc.py -d /home/satc/SaTC/SaTC_data -o /home/satc/res --ghidra_script&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ref2sink_bof -b httpd --taint_check
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;




  &lt;figure&gt;
    &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;https://s2.loli.net/2024/02/25/8XGEe9RblsIdCcF.png&#34; alt=&#34;image-20240225123710408&#34; /&gt;
    
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文章后面的部分还在施工中，&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;路过的师傅们看看远处的学习记录吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IoT漏洞复现记录</title>
      <link>https://ta0lve.github.io/posts/iot/0x02/</link>
      <pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ta0lve.github.io/posts/iot/0x02/</guid>
      <description>如果本博客部分文章图片加载失败， 可以点击此处查看解决办法 漏洞</description>
    </item>
    
    <item>
      <title>IoT基础学习</title>
      <link>https://ta0lve.github.io/posts/iot/0x01/</link>
      <pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://ta0lve.github.io/posts/iot/0x01/</guid>
      <description>如果本博客部分文章图片加载失败， 可以点击此处查看解决办法 固件</description>
    </item>
    
  </channel>
</rss>
